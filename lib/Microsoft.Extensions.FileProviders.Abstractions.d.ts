// Generated for: Microsoft.Extensions.FileProviders.Abstractions 1.1.1.0
// Generated by: Microsoft.JavaScript.NodeApi.Generator 0.4.0.0
/* eslint-disable */


import './Microsoft.Extensions.Primitives';

import { Duplex } from 'stream';

interface IDisposable {
	dispose(): void;
}

declare module 'node-api-dotnet' {

	export namespace Microsoft.Extensions.FileProviders {
		export interface IDirectoryContents {
			readonly Exists: boolean;
		}
	}

	export namespace Microsoft.Extensions.FileProviders {
		export interface IFileInfo {
			readonly Exists: boolean;

			readonly Length: number;

			readonly PhysicalPath: string;

			readonly Name: string;

			readonly LastModified: unknown;

			readonly IsDirectory: boolean;

			CreateReadStream(): Duplex;
		}
	}

	export namespace Microsoft.Extensions.FileProviders {
		export interface IFileProvider {
			GetFileInfo(subpath: string): Microsoft.Extensions.FileProviders.IFileInfo;

			GetDirectoryContents(subpath: string): Microsoft.Extensions.FileProviders.IDirectoryContents;

			Watch(filter: string): Microsoft.Extensions.Primitives.IChangeToken;
		}
	}

	export namespace Microsoft.Extensions.FileProviders {
		export class NotFoundDirectoryContents {
			constructor();

			static readonly Singleton: Microsoft.Extensions.FileProviders.NotFoundDirectoryContents;

			readonly Exists: boolean;

			GetEnumerator(): unknown;
		}
	}

	export namespace Microsoft.Extensions.FileProviders {
		export class NotFoundFileInfo implements Microsoft.Extensions.FileProviders.IFileInfo {
			constructor(name: string);

			readonly Exists: boolean;

			readonly IsDirectory: boolean;

			readonly LastModified: unknown;

			readonly Length: number;

			readonly Name: string;

			readonly PhysicalPath: string;

			CreateReadStream(): Duplex;
		}
	}

	export namespace Microsoft.Extensions.FileProviders {
		export class NullChangeToken implements Microsoft.Extensions.Primitives.IChangeToken {
			static readonly Singleton: Microsoft.Extensions.FileProviders.NullChangeToken;

			readonly HasChanged: boolean;

			readonly ActiveChangeCallbacks: boolean;

			RegisterChangeCallback(
				callback: (arg1: unknown) => void,
				state: unknown,
			): IDisposable;
		}
	}

	export namespace Microsoft.Extensions.FileProviders {
		export class NullFileProvider implements Microsoft.Extensions.FileProviders.IFileProvider {
			constructor();

			GetDirectoryContents(subpath: string): Microsoft.Extensions.FileProviders.IDirectoryContents;

			GetFileInfo(subpath: string): Microsoft.Extensions.FileProviders.IFileInfo;

			Watch(filter: string): Microsoft.Extensions.Primitives.IChangeToken;
		}
	}
}

declare module 'Microsoft.Extensions.FileProviders.Abstractions' {
	export * from 'node-api-dotnet';
}
